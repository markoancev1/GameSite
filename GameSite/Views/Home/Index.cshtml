@model GameViewModel

@if (ViewContext.HttpContext.User.IsInRole("admin"))
{
    <div class="container row mt-5 mb-3 quick-btn">
        <div class="col-12 col-sm-6 col-md-6 col-lg-3"><a class="btn" href="#div1">Popular</a></div>
        <div class="col-12 col-sm-6 col-md-6 col-lg-3"><a class="btn" href="#div2">Computer</a></div>
        <div class="col-12 col-sm-6 col-md-6 col-lg-3"><a class="btn" href="#div3">Console</a></div>
        <div class="col-12 col-sm-6 col-md-6 col-lg-3"><a class="btn" href="#div4">Unavailable</a></div>
    </div>
}
@if (ViewContext.HttpContext.User.IsInRole("guest") || (!ViewContext.HttpContext.User.IsInRole("admin") && !ViewContext.HttpContext.User.IsInRole("guest")))
{
    <div class="container row mt-5 mb-3 quick-btn">
        <div class="col-12 col-sm-12 col-md-4 col-lg-4"><a class="btn" href="#div1">Popular</a></div>
        <div class="col-12 col-sm-12 col-md-4 col-lg-4"><a class="btn" href="#div2">Computer</a></div>
        <div class="col-12 col-sm-12 col-md-4 col-lg-4"><a class="btn" href="#div3">Console</a></div>
    </div>
}
<div class="container-fluid">
    <partial name="_Carousel" class="w-100 h-100" />
</div>
<div class="container-fluid pt-5" id="div1">
    <button id="myBtn" title="Go to top"><span class="fa fa-arrow-up"></span></button>
    <h2 class="text-center mt-5">Popular Games!</h2>
    <h6 class="text-center"><em>Some of our most sold games!</em></h6>
    <input id="myInput1" type="text" class="mb-2 mt-4" placeholder="Search Popular Games!">
    <div class="row">
        @foreach (var item in Model.GamesOnSale.Intersect(Model.GamesInStock))
        {

            <div class="col-12 col-md-6 col-lg-3 mt-5 gm1">
                <div class="card h-100">
                    <img src="~/images/@item.PhotoPath" class=" card-img-top" />
                    <div class="card-body" style="background-color: #222;">
                        <h5 class="card-title"> @Html.DisplayFor(modelItem => item.GameName) </h5>
                        <h6 class=""><em>Genre:</em> @Html.DisplayFor(modelItem => item.GenreName)</h6>
                        <hr style="background-color:white;" />
                        <p class="card-text">Studio: @Html.DisplayFor(modelItem => item.GameCreator)</p>
                        <p class="card-text">Console: @Html.DisplayFor(modelItem => item.ConsoleName)</p>
                        <hr style="background-color:white;" />
                        <p class="card-text">Price: $@Html.DisplayFor(modelItem => item.Price)</p>
                        <hr style="background-color:white;" />

                        @if (ViewContext.HttpContext.User.IsInRole("admin") || ViewContext.HttpContext.User.IsInRole("guest"))
                        {
                            <button class="btn btn-success btn-block" id="addToCart" onclick="AddToCart(@item.GameId)">
                                <i class="fas fa-cart-plus"></i> &nbsp; Add To Cart
                            </button>
                            @if (ViewContext.HttpContext.User.IsInRole("admin"))
                            {
                                @using (Html.BeginForm("Edit", "Game", new { Id = item.GameId }, FormMethod.Get))
                                {
                                    <button class="btn btn-info btn-block mt-2">
                                        <i class="fas fa-edit"></i> &nbsp; Edit
                                    </button>
                                }
                            }

                        }


                        @if (!ViewContext.HttpContext.User.IsInRole("admin") && !ViewContext.HttpContext.User.IsInRole("guest"))
                        {
                            <a class="btn btn-success btn-block" asp-action="Register" asp-controller="Account">Register</a>
                            <a class="btn btn-primary btn-block" asp-action="Login" asp-controller="Account">Log in</a>
                        }

                    </div>
                </div>
            </div>
        }
    </div>
</div>

<div class="container-fluid pt-5" id="div2">
    <h2 class="text-center mt-5">Computer Games!</h2>
    <h6 class="text-center"><em>Some of our most sold PC games!</em></h6>
    <input id="myInput3" type="text" class="mb-2 mt-4" placeholder="Search Computer Games!">
    <div class="row">
        @foreach (var item in Model.GamesOnSale.Intersect(Model.GamesInStock.Intersect(Model.GetAllGamesOnPc)))
        {

            <div class="col-12 col-md-6 col-lg-3 mt-5 gm3">
                <div class="card h-100">
                    <img src="~/images/@item.PhotoPath" class=" card-img-top" />
                    <div class="card-body" style="background-color: #222;">
                        <h5 class="card-title"> @Html.DisplayFor(modelItem => item.GameName) </h5>
                        <h6 class=""><em>Genre:</em> @Html.DisplayFor(modelItem => item.GenreName)</h6>
                        <hr style="background-color:white;" />
                        <p class="card-text">Studio: @Html.DisplayFor(modelItem => item.GameCreator)</p>
                        <p class="card-text">Console: @Html.DisplayFor(modelItem => item.ConsoleName)</p>
                        <hr style="background-color:white;" />
                        <p class="card-text">Price: $@Html.DisplayFor(modelItem => item.Price)</p>
                        <hr style="background-color:white;" />

                        @if (ViewContext.HttpContext.User.IsInRole("admin") || ViewContext.HttpContext.User.IsInRole("guest"))
                        {
                            <button class="btn btn-success btn-block" id="addToCart" onclick="AddToCart(@item.GameId)">
                                <i class="fas fa-cart-plus"></i> &nbsp; Add To Cart
                            </button>
                            @if (ViewContext.HttpContext.User.IsInRole("admin"))
                            {
                                @using (Html.BeginForm("Edit", "Game", new { Id = item.GameId }, FormMethod.Get))
                                {
                                    <button class="btn btn-info btn-block mt-2">
                                        <i class="fas fa-edit"></i> &nbsp; Edit
                                    </button>
                                }
                            }

                        }


                        @if (!ViewContext.HttpContext.User.IsInRole("admin") && !ViewContext.HttpContext.User.IsInRole("guest"))
                        {
                            <a class="btn btn-success btn-block" asp-action="Register" asp-controller="Account">Register</a>
                            <a class="btn btn-primary btn-block" asp-action="Login" asp-controller="Account">Log in</a>
                        }

                    </div>
                </div>
            </div>
        }
    </div>
</div>
<div class="container-fluid pt-5" id="div3">
    <h2 class="text-center mt-5">Console Games!</h2>
    <h6 class="text-center"><em>Some of our most sold Console games!</em></h6>
    <input id="myInput4" type="text" class="mb-2 mt-4" placeholder="Search Console Games!">
    <div class="row">
        @foreach (var item in Model.GamesOnSale.Intersect(Model.GamesInStock.Intersect(Model.GetAllGamesOnConsole)))
        {

            <div class="col-12 col-md-6 col-lg-3 mt-5 gm4">
                <div class="card h-100">
                    <img src="~/images/@item.PhotoPath" class=" card-img-top" />
                    <div class="card-body" style="background-color: #222;">
                        <h5 class="card-title"> @Html.DisplayFor(modelItem => item.GameName) </h5>
                        <h6 class=""><em>Genre:</em> @Html.DisplayFor(modelItem => item.GenreName)</h6>
                        <hr style="background-color:white;" />
                        <p class="card-text">Studio: @Html.DisplayFor(modelItem => item.GameCreator)</p>
                        <p class="card-text">Console: @Html.DisplayFor(modelItem => item.ConsoleName)</p>
                        <hr style="background-color:white;" />
                        <p class="card-text">Price: $@Html.DisplayFor(modelItem => item.Price)</p>
                        <hr style="background-color:white;" />

                        @if (ViewContext.HttpContext.User.IsInRole("admin") || ViewContext.HttpContext.User.IsInRole("guest"))
                        {
                            <button class="btn btn-success btn-block" id="addToCart" onclick="AddToCart(@item.GameId)">
                                <i class="fas fa-cart-plus"></i> &nbsp; Add To Cart
                            </button>
                            @if (ViewContext.HttpContext.User.IsInRole("admin"))
                            {
                                @using (Html.BeginForm("Edit", "Game", new { Id = item.GameId }, FormMethod.Get))
                                {
                                    <button class="btn btn-info btn-block mt-2">
                                        <i class="fas fa-edit"></i> &nbsp; Edit
                                    </button>
                                }
                            }

                        }


                        @if (!ViewContext.HttpContext.User.IsInRole("admin") && !ViewContext.HttpContext.User.IsInRole("guest"))
                        {
                            <a class="btn btn-success btn-block" asp-action="Register" asp-controller="Account">Register</a>
                            <a class="btn btn-primary btn-block" asp-action="Login" asp-controller="Account">Log in</a>
                        }

                    </div>
                </div>
            </div>
        }
    </div>
</div>

<div class="container-fluid pt-5" id="div4">
    @if (ViewContext.HttpContext.User.IsInRole("admin"))
    {
        <div class="pt-5">
            <h2 class="text-center">Unavailable Games!</h2>
            <h6 class="text-center"><em>Games that are not in stock or on sale!</em></h6>
            <input id="myInput2" type="text" class="mb-2 mt-4" placeholder="Search Unavailable Games!">
            <div class="row">
                @foreach (var item in Model.GamesNotOnSale.Union(Model.GamesNotInStock))
                {

                    <div class="col-12 col-md-6 col-lg-3 mt-5 gm2">
                        <div class="card h-100">
                            <img src="~/images/@item.PhotoPath" class=" card-img-top" />
                            <div class="card-body" style="background-color: #222;">
                                <h5 class="card-title"> @Html.DisplayFor(modelItem => item.GameName) </h5>
                                <h6 class=""><em>Genre:</em> @Html.DisplayFor(modelItem => item.GenreName)</h6>
                                <hr style="background-color:white;" />
                                <p class="card-text">Studio: @Html.DisplayFor(modelItem => item.GameCreator)</p>
                                <p class="card-text">Console: @Html.DisplayFor(modelItem => item.ConsoleName)</p>
                                <hr style="background-color:white;" />
                                <p class="card-text">Price: $@Html.DisplayFor(modelItem => item.Price)</p>
                                <hr style="background-color:white;" />
                                @if (ViewContext.HttpContext.User.IsInRole("admin"))
                                {
                                    @using (Html.BeginForm("Edit", "Game", new { Id = item.GameId }, FormMethod.Get))
                                    {
                                        <button class="btn btn-info btn-block mt-2">
                                            <i class="fas fa-edit"></i> &nbsp; Edit
                                        </button>
                                    }
                                }
                            </div>
                        </div>
                    </div>
                }

            </div>
        </div>
    }
</div>
@section Scripts {

    <script type="text/javascript">
        function AddToCart(id) {
            $.ajax({
                type: "POST",
                url: "/ShoppingCart/AddToCart/" + id,
                success: function (data) {
                    console.log("Success");
                    console.log(data);
                    new Noty({
                        type: 'success',
                        layout: 'bottomLeft',
                        timeout: 3000,
                        text: 'Added To Cart',
                        theme: 'sunset'
                    }).show();
                },
                error: function () {
                    alert("error");
                }
            });

        }

        jQuery(document).ready(function ($) {
            $(window).scroll(function () {
                if ($(this).scrollTop() > 50) {
                    $('#myBtn').fadeIn('slow');
                } else {
                    $('#myBtn').fadeOut('slow');
                }
            });
            $('#myBtn').click(function () {
                $("html, body").animate({ scrollTop: 0 }, 500);
                return false;
            });
        });



        $(document).ready(function () {
            $("#myInput1").on("keyup", function () {
                var value = $(this).val().toLowerCase();
                $("div.gm1").filter(function () {
                    $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)
                });
            });
        });
        $(document).ready(function () {
            $("#myInput2").on("keyup", function () {
                var value = $(this).val().toLowerCase();
                $("div.gm2").filter(function () {
                    $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)
                });
            });
        });
        $(document).ready(function () {
            $("#myInput3").on("keyup", function () {
                var value = $(this).val().toLowerCase();
                $("div.gm3").filter(function () {
                    $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)
                });
            });
        });
        $(document).ready(function () {
            $("#myInput4").on("keyup", function () {
                var value = $(this).val().toLowerCase();
                $("div.gm4").filter(function () {
                    $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)
                });
            });
        });

        $(function () {
            $('a[href*=\\#]:not([href=\\#])').on('click', function () {
                var target = $(this.hash);
                target = target.length ? target : $('[name=' + this.hash.substr(1) + ']');
                if (target.length) {
                    $('html,body').animate({
                        scrollTop: target.offset().top
                    }, 1000);
                    return false;
                }
            });
        });

    </script>
}
